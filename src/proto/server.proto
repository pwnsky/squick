// 各服务器之间的通信RPC
syntax = "proto3";
package SquickStruct;
import "base.proto";

// Servers RPC 0 ~ 500
enum ServerRPC {
    SERVER_RPC_NONE = 0;
    WORLD_TO_MASTER_REGISTERED = 1;
    WORLD_TO_MASTER_UNREGISTERED = 2;
    WORLD_TO_MASTER_REFRESH = 3;

    LOGIN_TO_MASTER_REGISTERED = 4;
    LOGIN_TO_MASTER_UNREGISTERED = 5;
    LOGIN_TO_MASTER_REFRESH = 6;

    PROXY_TO_WORLD_REGISTERED = 7;
    PROXY_TO_WORLD_UNREGISTERED = 8;
    PROXY_TO_WORLD_REFRESH = 9;

    PROXY_TO_GAME_REGISTERED = 10;
    PROXY_TO_GAME_UNREGISTERED = 11;
    PROXY_TO_GAME_REFRESH = 12;

    GAME_TO_WORLD_REGISTERED = 13;
    GAME_TO_WORLD_UNREGISTERED = 14;
    GAME_TO_WORLD_REFRESH = 15;

    DB_TO_WORLD_REGISTERED = 16;
    DB_TO_WORLD_UNREGISTERED = 17;
    DB_TO_WORLD_REFRESH = 18;

    GAMEPLAY_MANAGER_TO_WORLD_REGISTERED = 19; // 将GAMEPLAY管理服务器注册到 World 服务器
    GAMEPLAY_MANAGER_TO_WORLD_UNREGISTERED = 20;
    GAMEPLAY_MANAGER_TO_WORLD_REFRESH = 21;

    GAMEPLAY_MANAGER_TO_GAME_REGISTERED = 22; // 将GAME_PLAY管理服务器注册到 GAME 服务器, GAME_PLAY Manager
    GAMEPLAY_MANAGER_TO_GAME_UNREGISTERED = 23;
    GAMEPLAY_MANAGER_TO_GAME_REFRESH = 24;

    CLOSE_SOCKET = 100; // want to close some one
    STS_NET_INFO = 101;
    STS_SERVER_REPORT = 102; // 服务端报告服务状态
    STS_HEART_BEAT = 103;    // 服务端之间心跳包

    ACK_PLAYER_ONLINE = 110;
    ACK_PLAYER_OFFLINE = 111;
}

enum ServerState {
    SERVER_CRASH = 0;
    SERVER_NORMAL = 1;
    SERVER_BUSY = 2;
    SERVER_FIRE = 3;
    SERVER_MAINTEN = 4;
}

message ServerInfo {
    int32 server_id = 1;
    bytes name = 2;
    int32 wait_count = 3;
    ServerState status = 4;
}

message ServerInfoReport {
    int32 server_id = 1;
    bytes server_name = 2;
    bytes server_ip = 3;
    int32 server_port = 4;
    int32 server_max_online = 5;
    int32 server_cur_count = 6;
    ServerState server_state = 7;
    int32 server_type = 8;
    int32 area = 9; // 区服
}

message ServerInfoReportList { repeated ServerInfoReport server_list = 1; }

message ServerHeartBeat { int32 count = 1; }

message ReqServerList {
     //ServerType type = 1;
}

message AckServerList {
    //ServerType type = 1;
    repeated ServerInfo info = 2;
}