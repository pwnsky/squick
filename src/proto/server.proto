// 各服务器之间的通信RPC
syntax = "proto3";
package rpc;
import "base.proto";

// Servers RPC 0 ~ 500
enum ServerRPC {
    SERVER_RPC_NONE = 0;

    REQ_REGISTER = 1;
    ACK_REGISTER = 2;

    REQ_UNREGISTER = 3;
    ACK_UNREGISTER = 4;

    REQ_REPORT = 5; // 服务端报告服务状态
    ACK_REPORT = 6;

    CLOSE_SOCKET = 100; // want to close some one
    SERVER_ADD = 101;

    SERVER_HEARTBEAT = 103; // 服务端之间心跳包

    SERVER_MSG_TRANSMISSION = 200; // 无连接的服务端之间的消息转发, 由代理来进行转发消息
}

enum ServerState {
    ServerCrash = 0;
    ServerNormal = 1;
    ServerBusy = 2;
    ServerFrie = 3;
}

message Server {
    int32 id = 1;
    bytes name = 2;
    bytes ip = 3;
    int32 port = 4;
    int32 max_online = 5;
    int32 cpu_count = 6;
    ServerState state = 7;
    int32 type = 8;
    int32 area = 9; // 区
    int32 connections = 10;
    int32 workload = 11;
    bytes key = 12; //密钥
    bytes public_ip = 13;
    int32 update_time = 14; // 更新时间
    repeated int32 parent_list = 15; // 父节点
    repeated int32 child_list = 16; // 子节点
}

message ReqRegisterServer {
    int32 id = 1;
    bytes key = 2;
    repeated Server list = 3;
}

message AckRegisterServer {
    int32 code = 1;
    int32 depth = 2; // 节点深度
    repeated Server list = 3;
}

message ReqReport {
    int32 id = 1;
    repeated Server list = 2;
}

message AckReport {
    int32 code = 1;
    repeated Server list = 2;
}

message ReqUnregisterServer {}

message AckUnregisterServer { int32 code = 1; }

message ServerList { repeated Server list = 1; }

message ServerHeartBeat { int32 count = 1; }